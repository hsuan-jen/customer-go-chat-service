// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// UserAppsDao is the data access object for table user_apps.
type UserAppsDao struct {
	table   string          // table is the underlying table name of the DAO.
	group   string          // group is the database configuration group name of current DAO.
	columns UserAppsColumns // columns contains all the column names of Table for convenient usage.
}

// UserAppsColumns defines and stores column names for table user_apps.
type UserAppsColumns struct {
	Id            string //
	UserId        string //
	CustomerAppId string //
	OpenId        string //
	AuthToken     string // 验证token
	Session       string //
	Type          string // 类型
	CreatedAt     string //
	UpdatedAt     string //
}

//  userAppsColumns holds the columns for table user_apps.
var userAppsColumns = UserAppsColumns{
	Id:            "id",
	UserId:        "user_id",
	CustomerAppId: "customer_app_id",
	OpenId:        "open_id",
	AuthToken:     "auth_token",
	Session:       "session",
	Type:          "type",
	CreatedAt:     "created_at",
	UpdatedAt:     "updated_at",
}

// NewUserAppsDao creates and returns a new DAO object for table data access.
func NewUserAppsDao() *UserAppsDao {
	return &UserAppsDao{
		group:   "default",
		table:   "user_apps",
		columns: userAppsColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *UserAppsDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *UserAppsDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *UserAppsDao) Columns() UserAppsColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *UserAppsDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *UserAppsDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *UserAppsDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}

// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// CustomerAdminWechatDao is the data access object for table customer_admin_wechat.
type CustomerAdminWechatDao struct {
	table   string                     // table is the underlying table name of the DAO.
	group   string                     // group is the database configuration group name of current DAO.
	columns CustomerAdminWechatColumns // columns contains all the column names of Table for convenient usage.
}

// CustomerAdminWechatColumns defines and stores column names for table customer_admin_wechat.
type CustomerAdminWechatColumns struct {
	Id             string //
	AdminId        string //
	OpenId         string //
	OfficialOpenId string //
	Unionid        string //
	Avatar         string //
	CreatedAt      string //
	UpdatedAt      string //
	Info           string //
	IsWechatOnly   string //
}

//  customerAdminWechatColumns holds the columns for table customer_admin_wechat.
var customerAdminWechatColumns = CustomerAdminWechatColumns{
	Id:             "id",
	AdminId:        "admin_id",
	OpenId:         "open_id",
	OfficialOpenId: "official_open_id",
	Unionid:        "unionid",
	Avatar:         "avatar",
	CreatedAt:      "created_at",
	UpdatedAt:      "updated_at",
	Info:           "info",
	IsWechatOnly:   "is_wechat_only",
}

// NewCustomerAdminWechatDao creates and returns a new DAO object for table data access.
func NewCustomerAdminWechatDao() *CustomerAdminWechatDao {
	return &CustomerAdminWechatDao{
		group:   "default",
		table:   "customer_admin_wechat",
		columns: customerAdminWechatColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *CustomerAdminWechatDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *CustomerAdminWechatDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *CustomerAdminWechatDao) Columns() CustomerAdminWechatColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *CustomerAdminWechatDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *CustomerAdminWechatDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *CustomerAdminWechatDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}

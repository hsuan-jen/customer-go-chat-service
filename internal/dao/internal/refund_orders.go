// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// RefundOrdersDao is the data access object for table refund_orders.
type RefundOrdersDao struct {
	table   string              // table is the underlying table name of the DAO.
	group   string              // group is the database configuration group name of current DAO.
	columns RefundOrdersColumns // columns contains all the column names of Table for convenient usage.
}

// RefundOrdersColumns defines and stores column names for table refund_orders.
type RefundOrdersColumns struct {
	Id                   string //
	UserId               string //
	CustomerId           string //
	No                   string // 退款单号
	TermId               string // 学期id
	SchoolId             string //
	StudentId            string //
	OrderTypeId          string // 订餐类型
	RefundAccount        string // 退款帐号
	RefundMoney          string // 退款金额
	TransferFee          string // 手续费
	Status               string // 状态;10:已提交
	CreatedAt            string // 申请时间
	UpdatedAt            string //
	AgreedAt             string // 同意时间
	RefundAt             string // 退款时间
	CanceledAt           string // 取消时间
	RejectedAt           string // 拒绝时间
	RechargeId           string // 充值单id
	StudentTermBalanceId string // 学生学期余额id
	Reason               string // 退款理由
	Remark               string // 备注
	Params               string // 退款回调参数
	ErrorMsg             string // 批量转账失败时的错误信息
	Type                 string // 退款类型,recharge:充值，addition:其他缴费
	RechargeAdditionId   string // 额外充值收费id
}

//  refundOrdersColumns holds the columns for table refund_orders.
var refundOrdersColumns = RefundOrdersColumns{
	Id:                   "id",
	UserId:               "user_id",
	CustomerId:           "customer_id",
	No:                   "no",
	TermId:               "term_id",
	SchoolId:             "school_id",
	StudentId:            "student_id",
	OrderTypeId:          "order_type_id",
	RefundAccount:        "refund_account",
	RefundMoney:          "refund_money",
	TransferFee:          "transfer_fee",
	Status:               "status",
	CreatedAt:            "created_at",
	UpdatedAt:            "updated_at",
	AgreedAt:             "agreed_at",
	RefundAt:             "refund_at",
	CanceledAt:           "canceled_at",
	RejectedAt:           "rejected_at",
	RechargeId:           "recharge_id",
	StudentTermBalanceId: "student_term_balance_id",
	Reason:               "reason",
	Remark:               "remark",
	Params:               "params",
	ErrorMsg:             "error_msg",
	Type:                 "type",
	RechargeAdditionId:   "recharge_addition_id",
}

// NewRefundOrdersDao creates and returns a new DAO object for table data access.
func NewRefundOrdersDao() *RefundOrdersDao {
	return &RefundOrdersDao{
		group:   "default",
		table:   "refund_orders",
		columns: refundOrdersColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *RefundOrdersDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *RefundOrdersDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *RefundOrdersDao) Columns() RefundOrdersColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *RefundOrdersDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *RefundOrdersDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *RefundOrdersDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}

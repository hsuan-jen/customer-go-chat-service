// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package service

import (
	"database/sql"
	"gf-chat/internal/model/chat"
	"gf-chat/internal/model/do"
	"gf-chat/internal/model/entity"
	"gf-chat/internal/model/relation"
)

type IChatMessage interface {
	GenReqId() string
	First(w do.CustomerChatMessages) *entity.CustomerChatMessages
	SaveRelationOne(msg *relation.CustomerChatMessages) uint
	EntityToRelation(msg *entity.CustomerChatMessages) *relation.CustomerChatMessages
	SaveOne(msg *entity.CustomerChatMessages) uint
	ChangeToRead(msgId []uint) (sql.Result, error)
	GetAdminName(model relation.CustomerChatMessages) string
	RelationToChat(model relation.CustomerChatMessages) chat.Message
	GetAvatar(model relation.CustomerChatMessages) string
	GetModels(lastId uint, w any, size uint) []*relation.CustomerChatMessages
	NewNotice(session *entity.CustomerChatSessions, content string) *entity.CustomerChatMessages
	NewOffline(admin *relation.CustomerAdmins) *relation.CustomerChatMessages
	NewWelcome(admin *relation.CustomerAdmins) *relation.CustomerChatMessages
}

var localChatMessage IChatMessage

func ChatMessage() IChatMessage {
	if localChatMessage == nil {
		panic("implement not found for interface IChatMessage, forgot register?")
	}
	return localChatMessage
}

func RegisterChatMessage(i IChatMessage) {
	localChatMessage = i
}

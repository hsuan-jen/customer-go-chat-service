// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package service

import (
	"gf-chat/internal/model/chat"
	"gf-chat/internal/model/entity"
	"gf-chat/internal/model/relation"
)

type IAction interface {
	GetMessage(action *chat.Action) (message *relation.CustomerChatMessages, err error)
	UnMarshalAction(b []byte) (action *chat.Action, err error)
	MarshalAction(action *chat.Action) (b []byte, err error)
	String(action *chat.Action) string
	NewReceiveAction(msg *relation.CustomerChatMessages) *chat.Action
	NewReceiptAction(msg *relation.CustomerChatMessages) (act *chat.Action)
	NewAdminsAction(d any) (act *chat.Action)
	NewUserOnline(uid int, platform string) *chat.Action
	NewUserOffline(uid int) *chat.Action
	NewMoreThanOne() *chat.Action
	NewOtherLogin() *chat.Action
	NewPing() *chat.Action
	NewWaitingUsers(i interface{}) *chat.Action
	NewWaitingUserCount(count int64) *chat.Action
	NewUserTransfer(i interface{}) *chat.Action
	NewErrorMessage(msg string) *chat.Action
	NewReadAction(msgIds []int64) *chat.Action
	NewRateAction(message *entity.CustomerChatMessages) *chat.Action
}

var localAction IAction

func Action() IAction {
	if localAction == nil {
		panic("implement not found for interface IAction, forgot register?")
	}
	return localAction
}

func RegisterAction(i IAction) {
	localAction = i
}

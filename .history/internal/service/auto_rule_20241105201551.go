// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package service

import (
	"context"
	"gf-chat/internal/model"
	"gf-chat/internal/model/do"
	"gf-chat/internal/model/entity"
	relation "gf-chat/internal/model/relation"
)

type IAutoRule interface {
	Paginate(ctx context.Context, where *do.CustomerChatAutoRules, p model.QueryInput) (items []*entity.CustomerChatAutoRules, total int)
	First(ctx context.Context, w do.CustomerChatAutoRules) *entity.CustomerChatAutoRules
	GetActiveByCustomer(customerId uint) (items []*relation.CustomerChatAutoRules)
	Increment(rule *relation.CustomerChatAutoRules) error
	GetMessage(rule *relation.CustomerChatAutoRules) *entity.CustomerChatAutoMessages
	IsMatch(rule *relation.CustomerChatAutoRules, scene string, message string) bool
	GetEnterRule(customerId uint) *relation.CustomerChatAutoRules
	GetEnterRuleMessage(customerId uint) *entity.CustomerChatAutoMessages
	GetSystemOne(customerId uint, match string) *relation.CustomerChatAutoRules
}

var localAutoRule IAutoRule

func AutoRule() IAutoRule {
	if localAutoRule == nil {
		panic("implement not found for interface IAutoRule, forgot register?")
	}
	return localAutoRule
}

func RegisterAutoRule(i IAutoRule) {
	localAutoRule = i
}
